import java.util.*;

class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int m = matrix.length;
        int n = matrix[0].length;
        return searching(matrix, 0, n - 1, target);
    }
    private boolean searching(int[][] matrix, int row, int col, int target) {
        if (row >= matrix.length || col < 0) {
            return false;
        }
        if (matrix[row][col] == target) {
            return true;
        } else if (matrix[row][col] > target) {
            return searching(matrix, row, col - 1, target); } else {
            return searching(matrix, row + 1, col, target);
        }
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int m = sc.nextInt();
        int n = sc.nextInt();
        int[][] matrix = new int[m][n];
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                matrix[i][j] = sc.nextInt();
            }
        }
        int target = sc.nextInt();
       Solution sol = new Solution();
        boolean result = sol.searchMatrix(matrix, target);
        System.out.println(result);
        sc.close();
    }
}
