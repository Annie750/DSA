import java.util.*;
import java.lang.*;
import java.io.*;

class Solution {
    public int[] quickSort(int[] nums) {
        sort(nums, 0, nums.length - 1);
        return nums; 
    }

    public static void sort(int[] nums, int low, int high) {
        if (low < high) {
            int partitionIndex = partition(nums, low, high); 
            sort(nums, low, partitionIndex - 1); 
            sort(nums, partitionIndex + 1, high);
        }
    }
    public static int partition(int[] nums, int low, int high) {
        int pivot = nums[low];   
        int i = low;
        int j = high;
        while (i < j) {
            while (i <= high - 1 && nums[i] <= pivot) {
                i++;
            }
            while (j >= low + 1 && nums[j] > pivot) {
                j--;
            }
            if (i < j) {
              int temp = nums[i];
                nums[i] = nums[j];
                nums[j] = temp;
            }
        }
        int temp = nums[low];
        nums[low] = nums[j];
        nums[j] = temp;
        return j;
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }
        Solution sol = new Solution();
        int[] result = sol.quickSort(arr);
        System.out.println(Arrays.toString(result));
    }
}
